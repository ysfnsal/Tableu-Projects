<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' inline='true' name='federated.0e0vl730x3h7s4192l0820336w3h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GRUP 4-MegaMerchandise' name='excel-direct.1smbldw00b7jjv1096pfk04h243x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/murat/OneDrive/Desktop/My Phton Codes/Projects/Tableau/GRUP 4-MegaMerchandise.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1smbldw00b7jjv1096pfk04h243x' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
          <columns gridOrigin='A1:K4111:no:A1:K4111:0' header='yes' outcome='6'>
            <column datatype='string' name='Order ID' ordinal='0' />
            <column datatype='date' name='Order Date' ordinal='1' />
            <column datatype='string' name='Customer Name' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='string' name='Region' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='string' name='City' ordinal='6' />
            <column datatype='integer' name='Postal Code' ordinal='7' />
            <column datatype='string' name='Segment' ordinal='8' />
            <column datatype='date' name='Ship Date' ordinal='9' />
            <column datatype='string' name='Ship Mode' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1smbldw00b7jjv1096pfk04h243x' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:K4111:no:A1:K4111:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
              <column datatype='string' name='Region' ordinal='4' />
              <column datatype='string' name='State' ordinal='5' />
              <column datatype='string' name='City' ordinal='6' />
              <column datatype='integer' name='Postal Code' ordinal='7' />
              <column datatype='string' name='Segment' ordinal='8' />
              <column datatype='date' name='Ship Date' ordinal='9' />
              <column datatype='string' name='Ship Mode' ordinal='10' />
            </columns>
          </relation>
          <relation connection='excel-direct.1smbldw00b7jjv1096pfk04h243x' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8029:no:A1:H8029:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (OrderBreakdown)]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Order ID]' value='[ListOfOrders].[Order ID]' />
          <map key='[Postal Code]' value='[ListOfOrders].[Postal Code]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K4111:no:A1:K4111:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8029:no:A1:H8029:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_27AF040972DE46959586376756662C1D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (OrderBreakdown)]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Range' datatype='real' name='[Calculation_1050183191175327744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Max Sales' datatype='integer' name='[Calculation_1050183191182274561]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Sales])' />
      </column>
      <column caption='ProfitNegative' datatype='string' name='[Calculation_45036049702830081]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Profit] &lt; 0 THEN&#13;&#10;[Sub-Category] &#13;&#10;END' />
      </column>
      <column caption='Axis Adjustment' datatype='real' name='[Calculation_45036049712082948]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Category] = &apos;Office Sublies&apos; OR [Category] = &apos;Furnishings&apos; OR [Category] = &apos;Techonology&apos; &#13;&#10;THEN 2&#13;&#10;ELSE 1.999&#13;&#10;END' />
      </column>
      <column caption='Pie Value' datatype='integer' name='[Calculation_45036049712545797]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Category] = &apos;Office Sublies&apos; OR [Category] = &apos;Furnishings&apos; OR [Category] = &apos;Techonology&apos; &#13;&#10;THEN [Sales]&#13;&#10;ELSE INT(NULL)&#13;&#10;END' />
      </column>
      <column caption='Cat to SubCat' datatype='string' name='[Calculation_45036049718566918]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Category Set] THEN [Sub-Category]&#13;&#10;ELSE [Category]&#13;&#10;END' />
      </column>
      <column caption='Count of Customer' datatype='real' name='[Calculation_841328758383493120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID])/(COUNT([Order ID])/COUNT([State]))' />
      </column>
      <column caption='Customer LTV (avg)' datatype='real' name='[Calculation_841328758388600833]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({ FIXED [Customer Name]: SUM([Sales]) })' />
      </column>
      <column caption='Order Date Unique' datatype='integer' name='[Calculation_841328758395330563]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Order Date])' />
      </column>
      <column caption='Order ID Unique' datatype='integer' name='[Calculation_841328758395518980]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='COUNTD([Order ID])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ListOfOrders' datatype='table' name='[__tableau_internal_object_id__].[ListOfOrders_27AF040972DE46959586376756662C1D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='OrderBreakdown' datatype='table' name='[__tableau_internal_object_id__].[OrderBreakdown_D0E618D518654302A0744ECB4D8381D3]' role='measure' type='quantitative' />
      <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discount]' derivation='Avg' name='[cum:avg:Discount:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[Country]' />
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[State]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[cum:sum:Discount:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[Country]' />
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[State]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[diff:sum:Discount:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Category]' derivation='Max' name='[max:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Max' name='[max:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discount]' derivation='Median' name='[med:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='Min' name='[min:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_45036049718566918]' derivation='None' name='[none:Calculation_45036049718566918:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[Country]' />
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[State]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[Country]' />
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[State]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discount]' derivation='Sum' name='[win:sum:Discount:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent'>
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[Country]' />
          <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[State]' />
        </table-calc>
      </column-instance>
      <group caption='Action (Cat to SubCat,Category)' hidden='true' name='[Action (Cat to SubCat,Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_45036049718566918]' />
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,State,Sub-Category)' hidden='true' name='[Action (Category,State,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Category Set' name='[Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='empty-level' member='[Category]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group hidden='true' name='[Exclusions (Order ID,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Order ID:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <group name='[Order ID &amp; State (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country,State)' hidden='true' name='[Tooltip (Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[avg:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[cum:avg:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[cum:sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[diff:sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[max:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[med:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[win:sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Quantity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]&#10;[none:Calculation_45036049718566918:nk]' type='palette'>
            <map to='#2a5783'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;Bookcases&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;Furniture&quot;</bucket>
              </multibucket>
            </map>
            <map to='#5081ae'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;Chairs&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7eaed3'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;Tables&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9e3d22'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Storage&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ae123a'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;Copiers&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b34823'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Appliances&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b9ddf1'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;Furnishings&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c85322'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Art&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dc5f20'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Binders&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;Technology&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e33e43'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;Phones&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed6f20'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Supplies&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f2862d'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Paper&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f59e3e'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Envelopes&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8826b'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;Machines&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b35f'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Fasteners&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbeb2'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;Accessories&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffc685'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;Labels&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ListOfOrders' id='ListOfOrders_27AF040972DE46959586376756662C1D'>
            <properties context=''>
              <relation connection='excel-direct.1smbldw00b7jjv1096pfk04h243x' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
                <columns gridOrigin='A1:K4111:no:A1:K4111:0' header='yes' outcome='6'>
                  <column datatype='string' name='Order ID' ordinal='0' />
                  <column datatype='date' name='Order Date' ordinal='1' />
                  <column datatype='string' name='Customer Name' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                  <column datatype='string' name='Region' ordinal='4' />
                  <column datatype='string' name='State' ordinal='5' />
                  <column datatype='string' name='City' ordinal='6' />
                  <column datatype='integer' name='Postal Code' ordinal='7' />
                  <column datatype='string' name='Segment' ordinal='8' />
                  <column datatype='date' name='Ship Date' ordinal='9' />
                  <column datatype='string' name='Ship Mode' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='OrderBreakdown' id='OrderBreakdown_D0E618D518654302A0744ECB4D8381D3'>
            <properties context=''>
              <relation connection='excel-direct.1smbldw00b7jjv1096pfk04h243x' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
                <columns gridOrigin='A1:H8029:no:A1:H8029:0' header='yes' outcome='6'>
                  <column datatype='string' name='Order ID' ordinal='0' />
                  <column datatype='string' name='Product Name' ordinal='1' />
                  <column datatype='real' name='Discount' ordinal='2' />
                  <column datatype='integer' name='Sales' ordinal='3' />
                  <column datatype='integer' name='Profit' ordinal='4' />
                  <column datatype='integer' name='Quantity' ordinal='5' />
                  <column datatype='string' name='Category' ordinal='6' />
                  <column datatype='string' name='Sub-Category' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (OrderBreakdown)]' />
            </expression>
            <first-end-point object-id='ListOfOrders_27AF040972DE46959586376756662C1D' />
            <second-end-point object-id='OrderBreakdown_D0E618D518654302A0744ECB4D8381D3' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action2_7A564650C6474FBFAA3489371802F343]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Entry' type='sheet' worksheet='Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Entry' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_8FF795F3C2AA4174878A702830F0C842]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Entry' type='sheet' worksheet='States-Sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Entry' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_89581F20E12E41CB9BB5D4DEB365F589]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Focused' type='sheet' worksheet='Damaged States' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Focused' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_421B6848EBD2466C8E6F008243363C81]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Focused' type='sheet' worksheet='Product - Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Focused' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_F38B55815BD343EBA80C1966C1BB7656]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Focused' type='sheet' worksheet='Discount' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Focused' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7_F7688CB3081446E08EABE2FA7A09F7A9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Focused' type='sheet' worksheet='Sales - Profit by States' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Focused' />
      </command>
    </action>
    <edit-group-action caption='Update Category Set' name='[Action1_B68BFB2EE236452F8AC9979FF6CBE4BA]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='Products' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.0e0vl730x3h7s4192l0820336w3h].[Category Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Customer - Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column caption='Count of Customer' datatype='real' name='[Calculation_841328758383493120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID])/(COUNT([Order ID])/COUNT([State]))' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_841328758383493120]' derivation='User' name='[usr:Calculation_841328758383493120:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758383493120:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk] / [federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk])</rows>
        <cols>[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758383493120:qk]</cols>
      </table>
      <simple-id uuid='{CC4C042E-CFA9-4102-A4BE-CC221E4F2F54}' />
    </worksheet>
    <worksheet name='Customers by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column caption='Count of Customer' datatype='real' name='[Calculation_841328758383493120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID])/(COUNT([Order ID])/COUNT([State]))' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_841328758383493120]' derivation='User' name='[usr:Calculation_841328758383493120:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[Longitude (generated)]' field-type='quantitative' max='-6977066.1054825382' min='-14595164.64244058' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[Latitude (generated)]' field-type='quantitative' max='7038126.6263332516' min='2641985.938242564' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758383493120:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f73131</color>
                <color>#ef5f5f</color>
                <color>#e88b8b</color>
                <color>#e0b3b3</color>
                <color>#d9d9d9</color>
                <color>#b3e0b3</color>
                <color>#8be88b</color>
                <color>#5fef5f</color>
                <color>#31f731</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758383493120:qk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758383493120:qk]' />
              <geometry column='[federated.0e0vl730x3h7s4192l0820336w3h].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='239' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e0vl730x3h7s4192l0820336w3h].[Latitude (generated)]</rows>
        <cols>[federated.0e0vl730x3h7s4192l0820336w3h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C7A02266-430F-42ED-B105-5CF89D3B1069}' />
    </worksheet>
    <worksheet name='Damaged States'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Most Damaged States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_F7688CB3081446E08EABE2FA7A09F7A9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]'>
            <groupfilter count='3' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</column>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]' value='94' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4cf</color>
                <color>#aad0c6</color>
                <color>#94ccbe</color>
                <color>#7fc7b5</color>
                <color>#6ac3ad</color>
                <color>#56bfa4</color>
                <color>#44bb9c</color>
                <color>#31b695</color>
                <color>#20b28d</color>
                <color>#0fae86</color>
                <color>#00aa7f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Quantity:qk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</rows>
        <cols>([federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk] / [federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{6A8A6CEA-9FD5-4318-A1E6-8E19E1DE052F}' />
    </worksheet>
    <worksheet name='Discount'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='18'>Relationship Sales - Discount - Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[diff:sum:Discount:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_F7688CB3081446E08EABE2FA7A09F7A9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]'>
            <groupfilter count='3' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</column>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0e0vl730x3h7s4192l0820336w3h].[diff:sum:Discount:qk]' field-type='quantitative' max='300.15000000000009' max-size='1' min='162.89999999999949' min-size='0' type='rangesize' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[:Measure Names]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[:Measure Names]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[diff:sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1988949775695801' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk] + [federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk])</rows>
        <cols>[federated.0e0vl730x3h7s4192l0820336w3h].[yr:Order Date:ok]</cols>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{0CFC34B7-62E6-4D90-BC9A-E5468BE44A90}' />
    </worksheet>
    <worksheet name='LifeTime Value by Order State'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column caption='Customer LTV (avg)' datatype='real' name='[Calculation_841328758388600833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({ FIXED [Customer Name]: SUM([Sales]) })' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_841328758388600833]' derivation='User' name='[usr:Calculation_841328758388600833:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[Exclusions (Order ID,State)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Order ID:nk]' />
                <groupfilter function='level-members' level='[none:State:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-1028247&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2011-452629&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2011-8749099&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-962050&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-3085945&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-1603295&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-4411844&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-7755633&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-8884167&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-1120520&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-2248449&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-842018&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-8882411&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-9649532&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-9730235&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-2348996&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-2889820&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-3332040&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-3870231&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-4158813&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-7380286&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2011-5791319&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-1507316&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-301235&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-839820&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-6376256&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-7207292&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-3461507&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-3620842&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-9345713&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-7973944&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-3382975&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-7367498&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-9800130&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-1229073&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-2201547&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-7586944&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-7944566&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-3967797&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-8583368&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-4000369&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-6770556&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-1485221&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-7447666&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-3470282&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-5721905&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-5685113&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-9491986&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-8064261&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2011-8011625&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-5801390&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-4349254&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-5752966&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-2901079&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-2277609&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-2748286&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-4149729&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-9489930&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-7659518&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-1643154&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-7541592&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-957579&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-5054484&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-6660694&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-8555156&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-4955166&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-3332467&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-3032977&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-9736684&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-8622401&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-3040435&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-2697575&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-7560485&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-4109586&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-5987890&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-9306812&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2012-5608207&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-1331897&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-9652940&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-1714781&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-4391469&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-5316268&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-4460165&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-4686001&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2011-4328697&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-3772513&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-1589827&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-4765625&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-3680090&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-6807336&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-1900588&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-6221889&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-4001460&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2012-4743725&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-9761394&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-4045031&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-4803875&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2014-1493038&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-7321100&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-236928&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-9431896&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-4696834&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-5869323&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-3505333&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-925819&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-4640958&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2013-8751225&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-1328396&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-1665836&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-772338&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-9904920&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2011-2476139&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-4615508&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2013-583958&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2012-5381064&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;BN-2012-8610295&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-231889&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-3020021&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2011-3714764&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-6244900&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2012-2380607&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-4220771&quot;' />
                      <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-978460&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
                    <groupfilter function='member' level='[none:Order ID:nk]' member='&quot;AZ-2014-6530154&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Order ID:nk]' />
                  <hierarchy name='[none:State:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_841328758388600833]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758388600833:qk]' included-values='in-range'>
            <min>8405.0</min>
          </filter>
          <slices>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[Exclusions (Order ID,State)]</column>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</column>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758388600833:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk] / [federated.0e0vl730x3h7s4192l0820336w3h].[none:Customer Name:nk])</rows>
        <cols>[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758388600833:qk]</cols>
      </table>
      <simple-id uuid='{44B52FB6-1190-4263-98D3-E6857B8D56CB}' />
    </worksheet>
    <worksheet name='Product - Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Product - Profit - Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_F7688CB3081446E08EABE2FA7A09F7A9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' num-steps='5' reverse='true' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00aa00</color>
                <color>#0fae0f</color>
                <color>#20b220</color>
                <color>#31b631</color>
                <color>#44bb44</color>
                <color>#56bf56</color>
                <color>#6ac36a</color>
                <color>#7fc77f</color>
                <color>#94cc94</color>
                <color>#aad0aa</color>
                <color>#c1d4c1</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Quantity:qk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]</rows>
        <cols>([federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk] / [federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{4429E35D-A155-4254-A6A3-6410149D6B7C}' />
    </worksheet>
    <worksheet name='Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column caption='Cat to SubCat' datatype='string' name='[Calculation_45036049718566918]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Category Set] THEN [Sub-Category]&#13;&#10;ELSE [Category]&#13;&#10;END' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_45036049720610832]' role='measure' type='quantitative' user:unnamed='Sheet 9'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_45036049720979474]' role='measure' type='quantitative' user:unnamed='Sheet 9'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_45036049718566918]' derivation='None' name='[none:Calculation_45036049718566918:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_45036049720610832]' derivation='User' name='[usr:Calculation_45036049720610832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_45036049720979474]' derivation='User' name='[usr:Calculation_45036049720979474:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_8FF795F3C2AA4174878A702830F0C842]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]' direction='DESC' using='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]' />
          <computed-sort column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]' direction='DESC' using='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]' />
          <slices>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720979474:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720610832:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720979474:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]' />
              <wedge-size column='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cat to SubCat:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='5.7254762649536133' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720610832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]' />
              <wedge-size column='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cat to SubCat:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='5.7254762649536133' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f5f5f5' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720979474:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]' />
              <wedge-size column='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]' />
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cat to SubCat:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.8342540264129639' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f5f5f5' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720610832:qk] + [federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_45036049720979474:qk])</cols>
      </table>
      <simple-id uuid='{4CC33C1D-EC48-4402-80B7-93C87B785D1D}' />
    </worksheet>
    <worksheet name='Sales - Profit by States'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[Longitude (generated)]' field-type='quantitative' max='-8321744.1958461022' min='-13759497.161009917' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[Latitude (generated)]' field-type='quantitative' max='9269191.4562448692' min='946100.26241012453' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c8dcc8</color>
                <color>#b7dfb7</color>
                <color>#a5e3a5</color>
                <color>#92e692</color>
                <color>#7fea7f</color>
                <color>#6ced6c</color>
                <color>#57f157</color>
                <color>#42f442</color>
                <color>#2df82d</color>
                <color>#16fb16</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Country:nk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]' />
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' />
              <geometry column='[federated.0e0vl730x3h7s4192l0820336w3h].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e0vl730x3h7s4192l0820336w3h].[Latitude (generated)]</rows>
        <cols>[federated.0e0vl730x3h7s4192l0820336w3h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D6EF8540-CF00-4E74-8B7C-E08A073B61CC}' />
    </worksheet>
    <worksheet name='States-Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (GRUP 4-MegaMerchandise)' name='federated.0e0vl730x3h7s4192l0820336w3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e0vl730x3h7s4192l0820336w3h'>
            <column caption='Cat to SubCat' datatype='string' name='[Calculation_45036049718566918]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Category Set] THEN [Sub-Category]&#13;&#10;ELSE [Category]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Max' name='[max:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[Country]' />
                <order field='[federated.0e0vl730x3h7s4192l0820336w3h].[State]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Cat to SubCat,Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7A564650C6474FBFAA3489371802F343]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_45036049718566918]' />
              <groupfilter function='level-members' level='[Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e0vl730x3h7s4192l0820336w3h].[Action (Cat to SubCat,Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[Longitude (generated)]' field-type='quantitative' max='-5517081.1050640903' min='-15765842.513005037' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0e0vl730x3h7s4192l0820336w3h].[Latitude (generated)]' field-type='quantitative' max='6774381.1783372685' min='2526379.2461377759' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk:2]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d2e9d2</color>
                <color>#b5e2b5</color>
                <color>#99db99</color>
                <color>#7fd47f</color>
                <color>#66cd66</color>
                <color>#4fc64f</color>
                <color>#39bf39</color>
                <color>#24b824</color>
                <color>#11b111</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk:2]' />
              <color column='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk:2]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]' />
              <lod column='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Country:nk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[max:Category:nk]' />
              <text column='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' />
              <geometry column='[federated.0e0vl730x3h7s4192l0820336w3h].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e0vl730x3h7s4192l0820336w3h].[Latitude (generated)]</rows>
        <cols>[federated.0e0vl730x3h7s4192l0820336w3h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{22BA518A-581B-4AAB-8A13-D4D51FA1C229}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Entry'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='5' type-v2='layout-basic' w='99064' x='468' y='893'>
              <zone h='98214' id='3' name='Products' w='54475' x='468' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98214' id='10' name='States-Sales' w='44589' x='54943' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='11' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone fixed-size='280' h='98214' id='3' is-fixed='true' name='Products' w='54475' x='468' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98214' id='10' is-fixed='true' name='States-Sales' w='44589' x='54943' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{585DF1A2-8354-4D91-B310-1F853819F748}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Final'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='5' type-v2='layout-basic' w='99064' x='468' y='893'>
              <zone h='84714' id='3' name='States-Sales' w='99064' x='468' y='14393'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='13500' id='8' type-v2='text' w='99064' x='468' y='893'>
                <formatted-text>
                  <run bold='true' fontcolor='#ff0000' fontsize='11'>1-</run>
                  <run fontcolor='#ff0000' fontsize='11'>Æ </run>
                  <run bold='true' fontcolor='#ff0000' fontsize='11'>D</run>
                  <run fontcolor='#ff0000' fontname='inherit' fontsize='11'>iscount policy should be revised</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#ff0000' fontname='inherit' fontsize='11'>     a- Despite the discount, the product quality of the products that are not  profitable shouldbe increased. </run>
                  <run fontcolor='#202124' fontname='inherit' fontsize='11'>Æ    </run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#202124' fontname='inherit' fontsize='11'>Æ   </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#202124' fontname='inherit' fontsize='11'>2- Should be focused on states which has low sales rate</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#202124' fontname='inherit' fontsize='11'>     a- Product advertisements should be made in inland, particulary in South Dakota, New Mexico,West Virginia, Montana and  Oklahama</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#202124' fontname='inherit' fontsize='11'>Æ     </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='9' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone forceUpdate='true' h='13500' id='8' type-v2='text' w='99064' x='468' y='893'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ff0000' fontsize='11'>1-</run>
                    <run fontcolor='#ff0000' fontsize='11'>Æ </run>
                    <run bold='true' fontcolor='#ff0000' fontsize='11'>D</run>
                    <run fontcolor='#ff0000' fontname='inherit' fontsize='11'>iscount policy should be revised</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ff0000' fontname='inherit' fontsize='11'>     a- Despite the discount, the product quality of the products that are not  profitable shouldbe increased. </run>
                    <run fontcolor='#202124' fontname='inherit' fontsize='11'>Æ    </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#202124' fontname='inherit' fontsize='11'>Æ   </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#202124' fontname='inherit' fontsize='11'>2- Should be focused on states which has low sales rate</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#202124' fontname='inherit' fontsize='11'>     a- Product advertisements should be made in inland, particulary in South Dakota, New Mexico,West Virginia, Montana and  Oklahama</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#202124' fontname='inherit' fontsize='11'>Æ     </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84714' id='3' is-fixed='true' name='States-Sales' w='99064' x='468' y='14393'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BFCF390A-EE12-4F09-8FA8-A0F9E1948E9E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Focused'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='5' type-v2='layout-basic' w='99064' x='468' y='893'>
              <zone h='25444' id='3' name='Damaged States' w='99064' x='468' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72770' id='9' name='Sales - Profit by States' w='23466' x='76066' y='26337'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72770' id='10' name='Product - Profit' w='31338' x='468' y='26337'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72770' id='11' name='Discount' w='44260' x='31806' y='26337'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='12' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone fixed-size='196' h='25444' id='3' is-fixed='true' name='Damaged States' w='99064' x='468' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72770' id='10' is-fixed='true' name='Product - Profit' w='31338' x='468' y='26337'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72770' id='11' is-fixed='true' name='Discount' w='44260' x='31806' y='26337'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72770' id='9' is-fixed='true' name='Sales - Profit by States' w='23466' x='76066' y='26337'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1BCBBA7E-0F5C-4D77-B3B4-2848EE211D82}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]&#10;[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[io:Category Set:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049710641154:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Calculation_45036049712082948:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B74A9405-B269-46FA-8E3F-253F834641A1}' />
    </window>
    <window class='worksheet' name='States-Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[max:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[pcto:sum:Sales:qk:2]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F7EE4CFA-0559-476C-995A-0C29974876DF}' />
    </window>
    <window class='worksheet' name='Sales - Profit by States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[max:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049702830081:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Order ID:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A87AD919-6A0A-4E38-80CC-400E6ACE044A}' />
    </window>
    <window class='worksheet' name='Damaged States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FAC485F-73D1-4D87-B4FD-E861D956A3F0}' />
    </window>
    <window class='worksheet' name='Product - Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0e0vl730x3h7s4192l0820336w3h].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48D87410-B2A1-44DC-A2F7-2FE65D43BB82}' />
    </window>
    <window class='worksheet' name='Discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0e0vl730x3h7s4192l0820336w3h].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{337CA89E-BB3A-48CE-86B5-9E6C32614361}' />
    </window>
    <window class='worksheet' name='Customers by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758383493120:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CAECE31-398C-4A4C-BFBB-154E945773B9}' />
    </window>
    <window class='worksheet' name='Customer - Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{269C89E6-4216-4FA1-91A3-622B753DDD39}' />
    </window>
    <window class='worksheet' name='LifeTime Value by Order State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[Order ID &amp; State (Combined)]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Customer Name:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Order ID (OrderBreakdown):nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Order ID:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Postal Code:ok]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Segment:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:State:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Sub-Category:nk]</field>
            <field>[federated.0e0vl730x3h7s4192l0820336w3h].[usr:Calculation_841328758395518980:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{DC6991F9-1A1E-4303-95D3-008617F95FBB}' />
    </window>
    <window class='dashboard' name='Entry'>
      <viewpoints>
        <viewpoint name='Products'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0e0vl730x3h7s4192l0820336w3h].[none:Calculation_45036049718566918:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='States-Sales'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{4D480A5D-113C-4406-ACF9-DB42DE38A61A}' />
    </window>
    <window class='dashboard' name='Focused'>
      <viewpoints>
        <viewpoint name='Damaged States' />
        <viewpoint name='Discount'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Product - Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales - Profit by States'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{34EACD9F-19AD-45E2-9FD3-9E22AE3BD39E}' />
    </window>
    <window class='dashboard' maximized='true' name='Final'>
      <viewpoints>
        <viewpoint name='States-Sales'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{DB279E1E-C46F-434F-A258-BB894015AE79}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer - Product' width='192'>
      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
      QOgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customers by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='166' name='Damaged States' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACmCAYAAACMcYBAAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAasUlEQVR4nO3deVhV1f748feZGBMHFOcxEQUViaM4ougNNS0sM783LKdbmtU1y9tkN8Tr
      1GjptbSflphoF6PkZg5czcIROYYSAg4pqIgTmBrTmdbvj404MKkMBznr9Tw8j2fvtfda+7g/
      Z6299tp7qYQQAkmyU2pbF0CSbEkGgGTXZABIdk0GgGTXZABIdk0GgGTXZABIdk0GQDUzGAy2
      LoJUDhkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2T
      ASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2T
      ASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2T
      ASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl2TASDZNRkAkl3T2roA0q3ObZ5D
      2IbM4s8Ojb0YEjqFUd6uldkrm1cm4jd5OM0qX8Q6RQZArdOSUeHvMrwZgIWCrF2s+HcMafOe
      prOti1YHySZQrabBqXl/+rTNp8DWRamjZA1Qm5lyORO/hs3OfZlZtMhy6QBrl33N3tP54Nya
      Ps9M5Wn/xmgqWHfTTjm9/Qv+a3yM54e3RkcuKf9ZxBe/nCYfZzz045g5SQ9JkXy2eh/p14zg
      0Jjuo19k6qAWaLBw9udlLI1O4pJRg7OHnnEzJ6Gvf2v+mnpe/GXqFEI6uoLlLD8vW0p00iWM
      mht51K/xL7QUQqpWCQkJd5U+a1O4eP7554v+XhcfRCeKS+bitWLTvHkiOiVHGIUQxpwUET1v
      ntiUdQfrVmwSWeYrIinyfbFsz0VxfZfZOxaJ2ZGJIscohDDni0tnL4p8IUR+Zro4/adRSWTM
      EduXfCWShBBCJImvwqPFSaMQQphF/qWz4mK+EEJki21fR4mUHGUbc/5JseGDSJEqhBBJX4nw
      6JNC2eRGHrWBrAFqnZuuASwFZGfs4dtFMQTPCKF9ThKJjYfyRpeGyq96wy6EDN3Je0kXGa4p
      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
    </thumbnail>
    <thumbnail height='192' name='Discount' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOXUlEQVR4nO3d2VNbWX4H8K+udtCOENiA2Rd7vIzbS0/jbmy3PUnNTFLppGZSSWVmskzl
      f8hb/onM01QmlcpDHvOQt8RuA167222P3W4QIEAWi4QQm/bt3pMHbLod4wUk0HK+n6dblH39
      Q7rfe5Z7z7FOCCFAJCml0gUQVdKBBCCRSBzEaYnK7kACwF4VHbTEegR37z1ApqC9+EkOiwvR
      V/7M/NQEvnj0BKq2fT0m4vHXzqM7iDFAPB6Hw+Eo92mJdtwdH8fFH/bgv//nCdr7O5DaWEZy
      tYDwRgzHTwygs28QkcAMvC49wikFoaUIlMwGuro6MRtO4K9+/jMo4BiAalTHkSbc+3oK3Z2t
      6OrsQFFV0NBgQc/AAKxWG9pammA0aAiuZqCoWTjsNnT3dEIoevT3de+chy0ASc3w8iCRSJSt
      757JZMpyHqKDthMAu91e1hOzBaBawDEASY0BIKkxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJ
      jQEgqTEAJDUGgKTGAJDUGACSGgNAUmMASGoMAEmNASCpMQAkNcO7/8juYitL2EyrMGhZWF1u
      GIUBQq9Hk5trgal27DsAjTYHcloGqc04DPkM/BMhXBwZhqqq0DQNxWKxnHUSHYh97ws0H/AD
      Jjv0agY6swVWgxVCr0dzk4v7AlHN4MZYJDUOgklq+x4DENWqolbERnoN01E/A0D1TUCgqBaw
      kohgKjoJ/8oEArEpxJKraDTZOAag+iKEQK6Yw+JmCFPRCfijE5iLBRDPbsHV4MZA8xAGfScw
      4BtCm7ODAaDaJoRAupDG/FoA/ugkplYmEFyfRa6Yg8/WgsGWExj0nUB/8yBa7K1QdK8Oe9kF
      opqiCQ2JbBwzq1PwRycwHZ1EaCMIAGh3HcOg7zj+aOgn6G0agLvBA51O99bzsQWgqiWEgCY0
      rKfXtrszKxOYWfVjeWsJJoMJ3Z7enTt8T1Pvdp/+HRf8/8cWgKqGEAJFrYhIPLzTfw+sTmE1
      tQqbyYb+5kF83HMVg77j6PR0w2wwl/xvsgWgihFCIK/mEdoIYmpl+4Kfjc0gkYvDbfVgsOX4
      9oC1+TjaXR3QK/qy18AA0J5MPv0as+FNtHsaoFrcOHdq6L3/rhACmUIas7GZ7SnJ6ATm1wLI
      F/NocRzBkO/Eiwt+ED576567M/vBLhDtSXdPFxRbBqbCOlYzb793vhywTq/64V/ZHrA+fzFg
      PebuxFDLCfzx0M/Q3zwIl9V9CNW/jgGgPclkVHQfa8U3X4fgaunc+bkQAgICseTqTv99OupH
      OL4Ek96EHm8/zrR9gL88+0v0evvQYGqs4G/xHXaBaM+2LxkBTQgsbS3sPGGdWfVjLRWDzWzD
      QPPxnT58l6cHRr2x0mXvigGg9/byodPv7v8WofV5JPNJJHMJNDU2Y8i3fbEP+o6jzdXx2gOn
      asUuEL2TJjRMR/0YDdzAl8/vIa/m0dTgxa/O/wZDLSfgbWw+lAHrQWALQG+0mdnA7dlRjAVu
      IJxYxsnWM7jSfx3n2i/AoDfWzF3+bdgC0CtUTcXT5ce4NfO/eLz0EG6rByO9n+Jy36fwNvpq
      9k7/JmwBCAAQiYcxPnsT47O3kMjG8UHHBVzpu46TR84cyAOoasEWQGK5Yg4PQw8wGriBiZVn
      aHd24Kcn/gyXei7DYXbU3d1+N/tuAWKRJcSSeZi0LAw2G8wwQbFY0OxxsgWoYkIIBNfnMBa4
      iXvzt6EKFR92DuNq/4/R6+2vi379Xuw7AMmtDaTyGgq5DITIYG46gosjwzApQCKRgM1mK3et
      VIJUPon7wTu4PXcLzzfm0ecdwEjPp7hw7CNYjdZKl1cx+w7AwnwARb0VRpGF0eaE1WBGQdPQ
      5GYLUC00ocG/8i1GAzfxVegBLAYLLvVcxpW+a9uroSTo4rwLB8F1aC0Vw525MYzP3kQ0GcXJ
      1tO40n8dZ9vOw6g38sL/Hg6C60RBLeDJ8iOMztzA0+XH8DR6MdJzFZ/0Xq3pB1UHjS1ADRNC
      IBxfwvjs57gzN4ZULomzHRdwte86jreehEHh/e1d+AnVoEwhszN9ORX1o8N1DH/yg8/wUdcn
      cFicvNvvAQNQI4QQmFsLYCxwEw+e34UQAh92DuOvz/0tuj29df2w6iAxAFUunt3C/eAdjAVu
      YmHzOfq9g/ibc3+HC8d+VDXv1NcyjgGqkKoVMfli+vLRwpewmhpwqXsEI73XcNTZJt3DqoPE
      AFQJIQRiqVXcnRvD+NwtrKViO9OXp4+eLcsOCPQ6doEqLFfM4enyY4zO3MCzyBN4G5vxSc9V
      fNxzmdOXh4AtQAUIIbC4uYDbc7dwb34c6UIaH7Rvv3055DsOQ5UuH6xHbAEOUSqfxMPQlxgN
      3MBsbBodrk786cm/wI86L3H6skIYgAOmaSpmX0xffhm6Dx10+LBzGL88//fo8vRw+rLCGIAD
      spnZwIPgHYwFPsfS1iL6mwfxq/P/gHMdFzl9WUU4BiijglrA5Mq3GAvcwOPFr9FobsRw9whG
      eq7iCKcvqxIDUCIhBKLJFdydG8OduVGsp9dx8sj29OWpIz/k9GWVYxdon7KF7M7bl5Mrz+C1
      +XC57xqGu0c4fVlD2ALsgSY0LG6GMD57C/eDt5EtZHGu4wIu913HYPMQpy9rEFuA95DMJfAw
      9AVGAzcxtxbAMXcnPjv1C1w89hGnL2scA/AGqqZiNjaDscBNfBW6D0XR48POYfz6wm/Q5emB
      onBAWw8YgO8RQmAzs4H7wdsYn72F8NYS+n1D+PXFf8QH7ec5fVmH9j0G2FgLo6hzILW+BKvb
      DaPQQ+gNaHI7am4MUFDzmIg8w2jgBp4sPYLN7MClnhF80nMFRxxt7OLUsRIGwRmEwzkkt5Zg
      ddoxOxF6sS2KqLptUdLpNEwGBcmsCpfju7v4SiKCe8Fx3AuOYyO9gVNHz2Ck+1OcPHIaRr2p
      ghXTYSlhY6wQIusFOKwCOrMFDcYGaIqC5iZXVbUAWjGDf//P/8Kp3nY8j6Vw7cfD+I+vfod4
      No7p1Un4bK0Y6b2K4e5P4Gnw8m4vmX2PAbytx+BtLWcpByM4PYlMNg2nrw255W+wvLWIB8G7
      GPAN4Z+u/TMGfEPQc/G4tKR4DpDNZqHm00gVFDR7nJhbC+Cosw1WY0OlS6MKkyIARG/CyWyS
      GgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSYwBIagwASY0BIKntGoDlxUWMf/45
      sqp22PUQHapdA6AV0jBa7YddC9Gh2zUAG+uLCHwbQo4tANW519YCqsU83E0d8HUZYDNy626q
      b68FoJjLYsr/LSYmVnDpysewGXZfJL6xtoycZkdqYwHGRjvMOhN0Fgt8HueBF01ULq8FwNzo
      QFdvP2LRHHRvWS3pbnIjHM7B3OCA0DLwTwdxcWQYqqpC0zQUi8UDLZyoHF4LQHYzCpuzCa62
      Npj0b54ljUVi2IwXYbcImG1unD3finQyCavbCUVRYDBwpwWqfq9dpbl0GnceTmKoqwM5VYPx
      Df+Fj7e1oya2RSF6m113hfjuRzrsZ58o7gpBtWLXfgp3RyNZ8FUIkhoDQFJjAEhqDABJjQEg
      qTEAJDUGgKTGAJDUGACSGgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJJaySvXg4EpWN0e
      GDU9NIMBXjeXQlLtKDkAhWIR+nwG/okQt0WhmlNyACxmMyAUnDx9Asl4HM1NLm6LQjVj110h
      SsVdIahWcBBMUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSYwBIagwASY0BIKkxACQ1
      BoCkxgCQ1BgAkhoDQFJjAEhqDABJreSV67PTEzA22mGCCYrFAl+Tsxx1ER2KEgMgYG5wQGgZ
      TE0Hd7ZFAYB8Pg+dTgedTgdN03aOX67Bf3kshICiKHs+BgBN03aOVVWFXq8v+fj75/x+3Xs9
      rvffrW6+w1J3hVh6PgejzQmr0YyCqsLjdnJXCKoZ3BaFpMZBMEmNASCpMQAkNek28BRCYO1f
      fgt1faPSpdQwAcvp03D++WeVLqRk0gUAAAytrdCZzZUuo2blpqaRefSIAahFOp0Orl/8vNJl
      1LT1f/098s9DlS6jLDgGIKkxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKTG
      AJDUGACSWslvg84HptDg9sCg6SEMenjd3BaFakcJAdCwtBhBoVhEPpeGf3JhZ1sUTdNQLBbL
      VyVVFSEEIERdfMclBEBBW/tRLMynAZ0Bp878AMl4HM1NLiiKAoNBuqUG0tDpdIBOVxffccm/
      QUd3XznqIKoIDoJJagwASa32O3F0qIQmUFhcQjEcxvrv/63S5ZSMAaC9ERpEPg+hqcjPBwFd
      pQsqDfcGpT3TMhmIYhF6u73SpZSMYwB6DwJT3zxGOLaFQjaJL/7wFFu5FMbvfoVoZBHT84uV
      LnDfGAB6DwIujxeb62tQ9AbkE1uYfPYMwmzBcmQdyc1YpQvcNwaA3k0rYHzsNvR6HVZXV5Er
      ZGF2tyAZnkcilcB6PFPpCveNYwCSGlsAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKTGAJDUdt4G
      TSQSKNczsXpYK1pJQojtZYe0b+/7Ge4EwF7GN/vi8XjZziUjBqB0ew5AvVsIzsLQ4ERybQVN
      R9qRTGXQZLcgmdfQ4vVUurxXKEr19Uy31qNYWU/D2aBHQTFDl0vB09qGxeAcfO1dcDZaKl3i
      K973M6y+T/qAuN1uKJkYrK39SCUSMCoCjQ4XtEKu0qXVBJvdCYvJgJymgyjk4LBbUIQRbpcD
      KPvbZIdHmgAE5+ehmZ3YXJiE3mDE8vIyIpEIlsNRqFoNf4OHZGkhhGyhCC2fRV4TiIRXsLL8
      HAvLq6jlBPwfAuvGHloSz9YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Entry' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Focused' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='LifeTime Value by Order State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WY9c2Xag95055nmOnJMza751S3J3wzDgR7/41wgw/KKntgHb8IPlhmEY
      Dbfkbsvdhi0JkrolWWiNd6qRxeKUzHmMyJjnM28/JIu36pIskhEsZjB5vpcqZsaKtc/Js/Y+
      e+01SEIIQUDAW4p83gMICDhPAgN4DkIILMs672EE/EgEBvACTCaT8x5CwI9EYAABbzWBAQS8
      1QQGEPBWExhAwFuN+u3/CCEIjgSejhAC3/fPexgBPwKPDcC27cDb8Qza3T5jy51K1vM8FEWZ
      Stb3PGRZBkl67bpnGrfvI0kgSdO9YMyiWwgfITi7by+A9Jsnwc5kyJ37DyguLhOSw6Qz0V9/
      ue/j+gJNVej3ByQS8akG+UMI36M/GKCHooQN7fmfFwLf81HU6W7Yi3z/7/zen7JxMvpRvj/g
      fFF/8wfOaEwkkyUZk9jf6dCsbRHKVtHdEbYnkEMxrE6d+tBjtRClY6tcX196ZQMyO212ajU8
      R+bda6uMLJ9W/YhMocjp8TGVSglPCSG7JqFYEk22ODoesriQod3uEk8mscYjhGpgyD6DiUsu
      k3xl4wu4WDxhAACObeP5AsZ1zPQyVuMIRVJZW8qze9RAjuUpqAM6nQ4bx91XagAgGA4GJBJ5
      vvzl33PclVhczpFwXEbDIdZwSHt4wv2Nh1RWb/KTG9WzMZt9Pv35P5BfvQy2QDVUdGHRGjr8
      s9/++BWOL+Ai8YQBaJEYq4kUEV2QX75M+3SXUK5KIqyhGSqFikHjcB9iWeJxh7WV9CsdkKSq
      aIqMEIJ0voiRMsindbpjh1hYxfIgGk9QLlUo5tIgyRzvbeA6edLFKhHdIFXMgzumc3pEfzh+
      peMLuFg8sQe4SBzubDASYa6uLU79HUII/ud/9/fU+tNtgoUQSFNuYmeRPU/dZ4+UNO3efUbd
      AC8uf6EN4FUghKDX65FKpaaSdxwHTXv+Zv5puK6LoihTPwyz6J5F1vM8JEl6YU/Mq9Tt+z5C
      iBf2Ij11DxDwff7fv79PazTdOcDbuwLwRuieOwOwBl2+frBBobKKIizi0RhCglTybAYe9Joo
      oTQRQ8Eetrn9YJd8dZmlUvbxd3Tbp4QTBYxXdHV3dxuBG/SCMncG4Ns2lusAMBwOEJ5AMzTa
      kz2+2TxieSHP8ckm1bUb5HUHR0AsrHHr809R4zkiYsRho8vK0pidnX3Wlpc4bJ8iuzKZYoVJ
      8wDiRTSrTddW+OSj95BnmGUD3mzmMBZIplheIJOKATAejTBNk1a7jTnpM7Tg5vs38CcWsh5h
      ZbHM3s5DZC2OYw0xHShkk9RPjpE1FWvocPmdG1QXFpDNIf2xRa1eI5TIUMmnCHZAbzdztwIY
      yQSR8RjbdllZXkX4NhsPD7l6aZ14bpFUIoamaxjlCJri43V6XLvxPma/hRJOongThpbP6lqE
      00aHXDaDqmrEcwYimyaeSqBF4oQNFQkJOZj832oCL9BzEEKwtX9CKBKbSt51XVR1unnG8zyU
      GWKBZtE9i6zv+0iANKUXaBbdwvcRvHgs0NytAPPI2HSwfHMq2bPArukD6WRFYdpFalbd08r6
      vg+SNPXeaibdQoAQb64BeLaNK8t4lkkoEnvqK8pkMiEcDj/x8+bJAe2xz/rqEsp3BJ/1+Rfl
      D/7y68ALdEGZOwOwBwMGmsawfkQ6k+PwtMfKYoloOMTEsqgf7jFwVAoxGSlWQLG7tMdwdX2J
      vmmTNRSOGg1GrTYry4u0Oh1GtstCLs1o1EeLJqkdHrGwusrx9kPKa9dIhKc7dAl485k7AwCP
      jbv3MScOlxWV/tEG9XgUa3ePUDREKLWA1N7k9saAdN4mFpIfnxqOuk06wiCitWgPTIQ1wc8t
      ogx3uD+2KYc8RpZFtpChflyjOzJJjM3AAN5i5s4AFCPCe+9/hDXo4pgmsXSOVDLN1vExly8t
      cffuJolcnmoe9FSSdDwEj7bx5aV1ctkco26D8dYBmXyecCGDEwHfmiAkhYShE4lEkITKZNgN
      zgDect4IL5A16mMKnWQs9Np1CyH4d//fF/SsKY/mfX9qb4jw/bMj/WnDAmbVPa2sEGcb93MY
      N0IgePFQiDfCAM6TIBju5QmC4S4Y/+uffM5+e8ryiGeRwa9f9rx1z8Jr1D13BmB2Oow0jYTi
      YzsTjjsaqt9jdXX1209weDhkYSH3WMZ3Lb7+6mvUSIrrNy7zTNu3hxz2XBbyLzebN3pjDk4D
      N+hFZO4MQPg+nu9jDTsMVRnHVfDsAbt7hwjhs7qSx3V93HGbP/6zv6J69SM+WAqRqFxiVD/g
      ZPcBp2MFeXDIbkfiWjVOtzehurpI7WCfWPnKeV9iwBwxh8FwHpv379LoDM9O9QBZDWEPaijh
      BADHe5vsHdRI5Svk03G0SIbm3gbjiYVQdK5eWcdxBBFDxohleGe9ymhiI6tq4PUJ+B5ztwn+
      tgiVJMmPnQjC99h8uMnq1ato0qOjdiRAgCQjS+D7302EkBDC/86/v/2eM+/Cy2wqhRD8V//i
      z3hYmza3+G3cBJznuF9Ofu4MYN4IvEAvT+AFumB8dv8YS5xOJev7/tQPwiyy56l71pTI16l7
      7gzg28p02fIKibBKMpnEtizsyRA5kkCTFTT125tjsbPTopIzcIwsMf3HGdNffLoVBMNdUObO
      ANyxRWX9Eo2DIxrDNka6SjKsodgDXMdD8yUatUNy1XXKOcHB5h6GlMCNGuzWdsiXykQ0lZ7l
      EtEE9cMjsotr9Gp7qIkiitWhM7RAUrlx4xqaMod+gIDXxtwZwFkw3ANW165jhnQkWTAYjcho
      4FgTrAmUFldonNYo54osrq1ysPM5ctRi5FpEYgP2Wj1iYYEVL2LbDu3mMSgpzE6DaCREOqKg
      hEKYrhcYwFvO3BmAFk3w0UcfE9F1+qGzjYzreYRkQUjRMKUOmxsPuXbzPUAimw8RNW6gJ/Ps
      b2+RzpUwNJ2IJqOls3iDJqlchVHjkGiuRDKinR2UKTLaj1RQN+DN4Y3zAgnfR8yQbfTS+oTg
      bz9/gMO0HhEfZcpVxvcebQanvNRZdM80bl88Ko8+bUbY9LrP+lyA/ILJ3m+cAbxuhBB0ut3H
      dYlelpnycr1HbtApLeC8coI93zsrOHAOOcG+7yMQKPIb6gYVwse2bVRVf2IW+E332LergfBc
      HNdDUbVHrzUC33/xvNDn8d/8H/8QeIEuKHO3AzTbTW7d+YZbdzewLZPRxMT3XIajMbu724xG
      Y3zPYzgaYzYestf1GXSa/N3f/g2NVhffF7jugI0HR1jmGMt2cV0Hy7LP+9IC5pC5WwEAJuMR
      6VyG3ftf8asHDX763gqqkWI86rOx0UPxXO5v7fDRBzdQCpDKl1le7pKJwN7+Hig++C5/+ad/
      hl5YoRz1yS9dpZz/kQ4KAt5Y5m4FkBSda9evEzNUXEljuZRHNwxGozHJbJHV5SqReJK1y1dJ
      RsLoytn7sW4YhOIZuvUTcvk8RihEeWGBlYUSudIi5ZcMgQ54O7hQm2DXHnNU77G0WH5l+RRC
      CP7Hf/M3HHane4Watdb9WWrhVOLnV5n62yfqHMb9srovlAH8GATBcC9PEAx3wfjzXzykM2UH
      WSH8qduFziJ7nrrPZnCYdgmY7brPzgHe2GC4fqeBEo6zt7XHUjGNlM4TVSQmwxZjxyAS0Qkb
      v7mZFRzubNAeC65fv4Ymw6BxCqkMcW32S/zyYS1wg15Q5s4ADEmwv79Hz7Y56vQpSz6/2tqn
      ulCkXT+iPprw7mqZvaNTqtUKzU6Pd66vMfZ13r2xwsn+Q46aI8rxKIoMD3b2KBQLhKJZfGdC
      qZg/70sMmCPmzgtkJFPUjutcyidojhza7SbjQZPT9phEOsfSQpXa4S6WY9Lvjli7dhVZUrAn
      I/r9Pu2BSSkZpje26NQOaY8sPMmgtn0bX3n9dYUC5pu5WwGQdN59/10SyRg3YhYRzUMKpchm
      0miqTqNRY+GdDzmpNSmWSoQVCUlSubSyQK0zYn11idPOmMvVFJKuEtndI5UM06lFKWZffWf7
      gDebx14g13Vx3elKUl9khBBs7B4ja9OtHrMGpMmyPG2BtSAY7gX43goQeESf5Fuf9NTRpzIz
      yEov/Id89bqnl/3WgTO1L38G3QJAevFzhMcGoKrqWQSe52D6MiHtfGLlPcfi4PCQTGGBRNT4
      3u9MyyRk/Hom9u0JthzCHjRptPskMgXy6TjgMRm7hCMGsyKE4A/+6k7gBbqgPLkHsHrUhgYh
      u4WWKBBWwbIsomGD8XhMe2CxslT90Xpr2f0BwjDY29lmoZSmZ0pUc1H2j9u4zgDNiLNQznFw
      1KAcMakbl6hGYvS29ykU8tiuj2t32N+bkE0B4TRR1WdkeuRz6R9n0AFvLE/dBHvDOk0RRext
      EzI0Ru0GUrJEQrPZ2DkikyuQiv5YNfV9tu/fpbB0jXajzr3tBsPVEivLaxweDFEli9tffs1g
      MkKq5JEKoBthotEIIRW2Nx8QSkbBG/HlVwfECyVissPa9fd+pPEGvMk8aQCKQSKdZ7S7hZ7I
      E9NNEpffodvuoikemUwW9UdsrajoYT7+rX9Cv9XF8VXyuSzZVJztnQPyxTxxQ0aRNGh2SCSS
      +PrZWOKJBGoozmTQZ2l9hY4fomwP0VNpMvEQ0VDQBCPgSS5ULJBrT2j1JhTzmVf2nUII/vW/
      /5T2eLrb5AsfecpjfV+ImVI/Z9M9vax4FJE2bSbb69T92ABM02QymTLg5QIjhGA8HhONRqeS
      P+t4OJ1DwfO8R27QWbotTq97Wln/UWOP8xj3mRt0ii6RoVCIUCg4Kf1NhBD8/l98zXHXmVr+
      XEKSz1H3jNHQr1X3E3sAs9NhbBhkIpEnPtztdh+HBfe6XRKp1CvvY+BZI76+cx8jluHa5dUX
      9jaNe8d8eeeITKHItUtLr3RcR81B4Aa9oDyxBxg3mwwNA3XUZfuoTjqXQiWF5w5A8unVD9Dy
      60QlB8Uf8tndGh+/t8JJo0e5Wubel5+y9M4/5fpKYaoBNWsH+HKYeqNBWIy4/fCEd9+/QafV
      JpPP0zptkU1HaZzUySxUuff1N7z7yX9KMWIyIsewtoOQTL7eavDB9UuoYoSnJnHGPbYO23x4
      c4W9gxq5XJKTkx6xdJr3b1x65niEEPzO7/1pYAAXlKe8KHns72xRb/cJhcJYlsnx/jan7T6O
      bZNIJWmeNrBsh95gTEISTCSdmzeuMxk0CCfTjHrDqQcUi0Y4PDrEtmyGpkOlUsQybcIhHdO0
      WVm/jOx7GKrMYDAknS8S0lXwXXY3N+i7MB6N0VWJhC44GmrUdzfJlkrowqTR7qKFwtjmiOra
      NZKRwDv0NvPECiB8j8nERDMMXNvGCIexTRNZ1VBkCc91EJKCqsgI38P1BJqmIssyvu9h2w6a
      pqNOXXVNYFsWPjK6KmNaDqGQjmXZGIYBSLROdnmwU+eDT36C7DroRghFEkwmFkY4hPAcHA9C
      hobr+oBAVWQmpk0oZGBZFrqhAzII/wc3XMEKcLEJvEDPQQhBfzAk/JQ90Yvgex7ytN6UGSvD
      zaZ7elnhnyUzT10efRbdQjzqm/KSsUCBF+jpCCG4s9PAlbyp5D3fR5kyN9Z7VAhs2g39rLqn
      lX3c2mpaN+hr1P2EF8g1h9S7JpV8jJ3DNmvLlbOfOy6Kpv7o3Std08SRZQxFRvg2/YmMJMzv
      lCZ0GQwc4vHwYxkhBLWDbXq2ypVLy8/O8vFsBpZPPPJyhv4nP9sIXoEuKE8YgD002T/ZR3dS
      HLfGRBWLtqWQ0iSMqM7B0Smr62uc7O2QX1wn850H8VXgjEYMNA3cESPhcdoNIds1JElD+A6p
      lEGrNSAW1dh88IBkaZmUPqFrh8gndEb9NqftIQY2E8KkDI/jxoArl5fZvHMbtXCJ60vBShdw
      xlMny1TE4LBnk45odDoddjce0huNGfYGLFYL7G494LjVo9Fo/WgDcycTbP+s0Z2sqJwcbtPu
      /XoWtlqHbNW7nDaaCN9DlhXq+wc0Ww0SuSK9bpvNzQ26A4vlTJjNvRMWL1/BUIMukQG/5okV
      QItEWIpUaXddwoaE2ZdYXE6Qy6fRVQUjrLO8uo60vUMymXj1A4roHN1/QCFfIRGNoasqkp+j
      tr9NeqUICMbdY+pqgcVMlGQygR5LYdQe4EQT5LI5QhGdcTTOUiRHvpAhosJiXLC/u0dp+fIr
      H3PAm8sbEQwnhGA8mRCd0hMzq+6//MVdTG/act1nq9N0sv6jjLBpm83Nont62bMWtdPHAs2m
      WwDihesKBW7Q5xAEw708b1Iw3BMrgGeNaQ1tCpkoRycdqpUXC2kYj8dEzmGG/rERQvBf/y9/
      zubUjbID5pkn1nVrMGZzfx/VTLN5MkQTY3qORj4K9YEgH4XWRCIbFtQHHuuVFBu7dVTZwhcG
      C9UiYUNn7Pgc72xRXb9KfW+TZCrOl9/sUsmFGfohVosJxiLE6mLxewv8pHXK5w8fYhgpLq2U
      z5JehECVZVzPQ1FVfM9FkhR830NVVbqHW1ixIvfv3OHGapH2wGdpfYmwsGlPJOxxn5gy4Ztj
      l0/eXQXOKi2cHZr47O0fsba28syb5Lg+ljPdOUDAfPPUF9tkROegZ5GL6nS7XbYPO0hrRSaW
      Qsd1mTgabctmZ6uGY5W4fuUaO7tbZBMGe3v7LFVyHLZNhhMLdfM2Oz2XRdXgytUrZCMSjh6j
      fbiJJcdAFJ98xRWg6hqn9Tqdk23+8fNt/skn79IcDkkkkox6A4r5NP/4j3/HB//sv2S9UODg
      7gPyqTS1gUfMH3Pns1+xtFzksKfRr+9QThnIcoYvvvgSZB0Vk2wuw3F9iKobrL2Gmx0wfzzx
      oqSGQixWy8RiKXKZFLquUywViUYiqIpCJBJGURV0XadQLFIpZLh3f5NUNkcslqSQy7Cze0Qi
      HidiaCRKS+QiGqlUBqvfwJVVjg8PMMIRlKf0gZJkGUWWEa6HqmnYnsyV5RJoMW5cv3ZWF1T4
      DEcTLl+/DpaNqkcYjmyWFtM4lksknubmtUsgqyQyOWKGQr5UYW11GUU6c6tmClUWSwV8f/p+
      VAFvPm+EF+g8EULw3/6rv2a/ZU0nj5g6NfBMFqausjyz7ullYfqUyNepOzCA5xD0B3h5gv4A
      F4y//nybvjWtT1tMXd1t5qT4WXTPICvOCvRPHTc2k+6zAby5/QHs0QhLUbD6XVK5EupTJpF2
      q0Umm33i53ubd2n2Ha7dvEnU+PWltdotspks5miAEorzskXvfnH3KAiGu6DMnQF45ojbW9uY
      E4v3rgv2D0+pVIrEkwmG/T61oyOEHqZ9WoNIBn9Yp+fq/PT9GwgtwqWKwkntiHGnQzFf4Kjd
      IRqNYI0nqIpADHrsH5xQXVqidnTE6tV3SEeD7pFvK3PXHwAU1q5cY6mcp9Vo0Ks9ZCJHuP3F
      VzieTa66Tkwac2/riOFwiBZNkU+endIO2nUOezbSsEFrMGbQbpBfvow/bFHrjnBGQ0zH5cq1
      S5gTD3yXbqd/ztcbcJ7M3Qqgx+OkZZm4tohvm6ihKCnVppvMUS1V2N7cIlW5wsfxBo6WJJf8
      9enz+tV3iUQi+I6J83CbXKVKKKqRvXQD2XexfNA0FU3TUPMGzrhLIR/UC32bCbxAz0EIwVf3
      92boDzBDPM4MmVEz654lFkicuW/PLRaIGTLCAp4kFTMIR2JTybqei6pMd5td75EbdEp/yqy6
      p5X1fR8kpi5vOJNu4YPg5SvDzQuObSGrOpPJmLCuIRQN9VE1Ch8F7WluIcA2R3QHFrlcBlkC
      17ZBVVFnmEG/5V/80WeBF+iCMncGMOo0sCSFew8OWKvmSBXzdNsDEhGPWt1k5HvcXF+k2RmQ
      z6QZjkak00kePtwiWyhhjgd0BhP08RCpXMZuNUlncyhaCN+1gsT/gO8xdwaQTCf49IuHlAsp
      OpZDqHPK/Tt3qaxeJaTqhFWdrbtfc3jao7q4jJFMk066aJEEpWKBe3e+JqRq9Ewf2X7I7sEp
      C4tjNEnGiMRZWSyd9yUGzBFz5waV9DiRkMzKQg6kEEJI5ApFIqEwyXSSSa9LPJMjVyySTKZZ
      qhaRFR1DjPn6m/uEwyGaA5NMOkkmlyOdSpPLl7EGLbLF6co1Blxc3govkO+ZHNf6LFRf3gCE
      EPzLP/k5jaE/le63sTr0WUDC+Yz7ZfW/FQYwC0IIGs02iWRyKnnXnT7cetZguFl1Tys7azDc
      LLpnDoZzzSGNgU1EV4jFEyg/EJQ0GAyIxeOvtFiW8D1GozGaEcbQX+wmeK6LpCi4jouqyvi+
      QFG/X8RLCJ+JaRMJ/+YmWDzqS/vsG/bf/eHPAi/QBeWphbF29rZJJ1IsSYLtvSOq5RKRRJzx
      cMDJ4SGV1St0T3ao9V3WSnHalsL19aVXMiCz02bj+AjhaSwvFIjHokxsn1hYZzgaE43HMYcD
      NCPEeDwhmUoxPN1jqOfYvH+Pq8sFukOPbLlANiRRG3gMO02ShsvDtspPrpTwZR1dAccTCNfk
      4KTFtSvrr2T8AW8WT51ilxeKfHN3H6vbxEKmN4pxeHRMOptiNO6zefc28dIahXT/rHDWYYdL
      60u8mkLjgvFoRDxRoNVsMmgc8vntXT54/zoT30OpK3guZJMGX3z+GWvv/edcqRTYuX2XQjZD
      beiTlCxOd7fwCglOR1GsbhcjqZCIZrn/cAdJgO9bVMtZDpvOS0eHBlwcnnhJ0yIRUpkyl5bL
      rF++jK5HyBVKJJJJitkUkViS6vIa0vAYoYaIxWIsLv9APc6XRFIVVFlB+AIjFMJDYalaQA0l
      WF1ZJhGP4ZhDBiOLyvIyGj6KHsHxZJYWssgCYokMayuLqKpBMpVEwyGeLlCtlJB9B6HqFMoL
      FPJ53Ekf5LnzBge8JoJN8HMQQvA//du/O5ceYTxKLJmW8/RAzcLr1B0YwHMIUiJfniAl8oLx
      J//4gNaUfYKF7yNN+SAI3z8r8TftAjKr7mllH0WDTrt6zaKbR9Ggb2xKpDXo8vWDB8TSFXIJ
      g3z+ycOrUa+DFIoRMb4zS7gWX9zd5MN3r/DFp7d5/5OPXtnF3d4+DdygF5S5MwDfdikuLtFv
      dtmpb7F/0qKUUDhpDakUc+zsHVEu5Wm2H1KoLNM92kZLV7i5ksMzhxwf1RlbHrWDbWq1FuVK
      heOTE0rlJVr1PTKZDAdHp9z86CekwkEq5NvO3MUCgeC0VmdxeZVCZYVsMkx/aFHIRNh8sIUr
      fBxPolSpMBmccFTr4rkuAJlcjt29Q3KZOL3BmGohxsZOjWq1QrfdIlteYNxp4OHjOMHWJ2AO
      N8G+6+JJEpqiYFlnxagk3+G0O6aUS3By0iCby9JqtihUqgzbNXwtRj4ZxXI9HNtGVRRkWVBv
      9qmWshwf18iXykgIZOFyXGtSrFQxnpFb8F2CLpEXm8cG4DgOjjOdq+8iI4Rg57COok/XCmqm
      1MJH5dGn3UyeV0qkeNTZZ9qN7OvU/XgPMIvb6qLjeALPnS4a1PN8FDFtu1AfWWYGA5he90zj
      9n0kJCT59d8z4QsEghd9lB8bgKqqqKqKZ5sMTA9dlQiFwk+t0OVZFp6q4pgmkUj0hf4+k8mE
      cPj5s6jnOHiShGdbGOEoT4vFe9Z3tepHdMY+qysLKN8Z1IvqfhpCCP7NX98NXoEuKE/2B+gP
      uL2zQyGVZrlaZmf/hKWFCqoGpi2hyhJi0MNMJmkd7rNQyrNf67O+lGd7/4SQrhDLFJm0TpBj
      OSKM6doqdu8EOZQhm9QRehxr2CMWUmkMPdaXyo/12/0+A01jWD8ik81z3OizVC0SCRtMLJvG
      8QF9S6KQ0JCjOWS7R2cCl1cX6I0mJFSZo9Mmk26HpcUqnW6PgWWzkMswHvXQIknqxydUV5Y5
      2d2mtHyFeHjunGEBr4mn/OUllsoZHm63sPptRraDosB4aCGpgnS+QgaX+7e/ZjyyiBsq7eMt
      wCUUjmMLn37zCM8zcJrHjITDRIkTknWiskWrb+H5QyKhNHfvfIXtR1hYKmM81u+xcfc+5sRB
      kRVa+xvokTD2XgcjYmDEisTcbb6+3yeVGxMPySjq2XnAqNei4xtEjA7N7hhvPMbLVlAHRzwY
      2ZRCHkPTJJFJUDuq0ewOiOVN4uHpKj4EvPk8YQCqYZCOLVBoD6nks+zV2hSKZWqiRkTzyaZS
      KJbK+x98yLDdRHZNYqkciUSCaDSBLwl8S2LjzkPS1VViqoVlSWRzBUIKKK6Hj0o2mQKzQmf8
      fV+sYkR47/2PMPsdHMskns6RSmXYPD7io7UF7tzdJJHLU8kJ9FSKdNx4fFBaXlwnl8sx6pwy
      sg7J5LOECzmciIxnTxDIxEMG0UgEhQmTYQeZuXKCBbxmfiQ3qM9k4hAOG8//6AtgjXqMhU46
      9mqbcr8IQgj+r7/8nK45nfxZp8fpnAuzV4eeQfcMst8+UtN3iXx9uoMukc8h6BL58rxJXSIf
      vwKFQiFCoRC+a1NvNEmkckRfMFRA+B6O66PrryYlZp4QQvAv//wrDjv21PJvW1L8t+8U00eB
      vz7dT+wBzG6XvjnhdHOL5UoWX4ui+RZ90yObCNPs9Cnks5zWGySzWWJhg2G/Rb1lsrRYxfdt
      +u0WeiKL4o7pmz4h4RFKx2g3+5QrZdQfyDM2uy2+3NggHM2yslAgmUg992K6x7t48QKbDx5w
      aTFPd3jWJVJzxnQsBcmdYDDh3pHJRzdXf/OWcXR0TLVafeb31zsjdgI36IXkKV4gn0a9Ti5f
      4Fc/+yVGrkI+pqMh0+/JGJLGoTNif/eYy7jULAc9HEd4Nnt726i6Tn1/l7FSpxjXcCWVuKJg
      +2Pu3HoARozFfOKZAxKeh+edHaC0m00G9T1+/vUBv/3hFY5aHQqFIp3TBqVynk9/+Qve/6f/
      BQupBA+3NjFUnXrPQneHfPaPB1y+VOWwA43DLSppA1PJ8cVnnyLUCIY0IZrMcG1gE+cAABSd
      SURBVFpvgRb5QQMIuLg88aKk6BHeef9Drq2vUaoUKRRyZAtn/02kMpRKBWKxGPGIjpEq0zxt
      UsnFiSczSJ5FLpNBj8bJJOPkCkVK+RyRWPRRgas8mvr8tUnVNBzLwnYcekOTQlxl7OncvHkN
      37ORFIV+v09pocywM0QLxWmctlheytDrT4hEkrx7bRXHddETOZJRnVK5wtrKEp4A33MxEjlW
      iklc1GfWGw24+MzkBTIHbfquTiH96vzoQghc10GW1bNXHyHOvCHf2Qx6noskyfhCoMgKsnx2
      fC7LZz+T4dFL4Fm/Qd9zkeWzzCrf80A6a5QtyxKue9Z0W1GebgRBMNzFZu6iQeeNICXy5QlS
      Ii8YX2ycYNOcStb3fORnrC4vJCtPnxI5s+4pZYUvQJrhHGAW3UKAAOkFu0zOnQG4kyHHnRGL
      xQRbey0urS08/p1ljfFcGT2kof6AhbdPDznpWCyUciSSySeen36/TyLx6424bdvouv7U3wH8
      +19uBq9AF5S5MwBnbHFUOyTkZah1hsQPHVoTiYVMiG8ebrFQWMaIG9SPj1m9dIm9zYfkF1bp
      ne5BOMuV5Ry1psmVK8vsPrjL9rbMlavLPHy4y+raGsd7W1hCYWlxhWG/TSweZzQako4a7Jx0
      CYdVLMsim8vNdAob8GYwl+6PdCzEYdckHdHpdNrsbmxy0Oxy9fIqvmUxMSc4zoSDBw9JrV6m
      frCLGkmhCus73yKhGFHWC1EO6x1Ggy53798hUVglEYnQPLhH7bRHvdliNBpyWGtw9coaw8YR
      9e7k3GriBLxe5m4F0CIRFsOLdPsOYV3C7MusrKcoZcIc1LoslypImmDYiVBdW+dwe5Py0iqG
      LiN8DySDUjbExtYeC8U8YQ0Kjo81ylEuF2ic7JHMV4iGDRaTMdpjQVjxCSk+GxvbLF19Dxwb
      zxc/eGAXcDEIvEDPQQjBf/z0PraY0iPieyjy9F0iZVmauknebLqnl/XFo4ywaWOBZtB91iVS
      vHCDvsAAnkPgBn15AjfoDJwdhLkoivpEOuZvBkkJ4QMSwvcfzZbfHmgJfJ+npnNOwz//g79n
      oxZ4gS4ic2cAZrvBrZ0ddCPJu1dXcYWEocpYtstJ7YhyqYphaFiWg9Tf40S/RMqp8cvPb/HO
      R79FpZBB+EMebnRZW8uDrKHIAs8X6FPOKoJfRxkGXCzmzgAAbNMkHM2xc+8Lfnm/yW+9vwJq
      Amvc5W67jY7PNxtb/PTDmyhFSBeqrK72yUUEe3v7oLjg+/zFn/wxWmGVSkyQXbxCtZA+70sL
      mDPmzg0qKTpXrl0jFtJw0Fgu5VANHdM0SWSLrK8sEo4muHz1OsloGO3Ra46m64TiWTr1I7L5
      PLqhU1pYYnWxTLa4EDz8AU/lQm2CXXvMYa3L8lLllfUtE0Lw3//r/8hhO0iIeWFZHlWHnvKv
      MGuHyrMekUGXyFdC4AV6eQIv0AXjP/xqk97USfFiam+U7z9Kip82GG5W3VPKns2p0tQpkbPp
      BnjxFWTuDKDfaaCEE+xv77FYTCOlckQVicmwzcQxCEc0wsZv5ioLjnYf0hoJrl+/iibDsNFA
      pNLEtdkv8fMHJ0Ew3AVl7gxAlwSHB3t0TQu53aMs+Xy2fUilkqNVP6Q+mvDeepWD4waVSpHT
      Vo93rq8zdDXevbFCbX+To+aIUjyCosDm3gH5fA4jmsGzTUrF3HlfYsAcMXdeoFAyxclRjUv5
      OK2RQ7vVZNCtUW+PSaRzLC8tcry3xdgc0W2NWLt2FVmSccwxw+GQ1mBCJR2mN7ZoH+/T6I1x
      0DnZuo2vvJo6RQEXh7lbAZB03nnvHZKpOErMJKp5CD1OLptF0zRO6ydU3vmQ45MG5XKZsCIh
      SSrryxVO2j3WVhapt0ZcurKIZKiEt3dIJcK0TyIUs/HzvrqAOeOxF8h1XTzPO+/xzB1CCO5t
      HyGpoankfd9DnjaozH/UH2DKXfDsuqcNSDsLUZm+MtwsugVnm+CXLIwlhAgM4CkIIdAUCVWb
      ttmDeGbC/XNl/UfFAKaNBp1F9wyyvg9I0tQJRbPonroynKZpaJqGYw65/2CTXGWVcj75vQ+7
      jgWKwaDXIZ0+O1ntt2tsHza5ev0G4ac8JOP2KW4khSbJhI0Xe+MaDvqEIjHU79wE3/Nwff+Z
      8TyOZSFrKpbtEgk9+13fsU0kxUBVXuyPI4TgX/3lncALdEF54okcD3vYQiUW1bj39VdoyQLx
      kIaOz+HRBqaxiDo+Yi+S470bVzmud3n3nRtM+i2+3K2xvFSldlInFtVodi0WEjI2CpIlaJ3s
      EcsvolhNLCXB5dWFp8xtgr2N28SX3iUXVVEASVfYvb+JlsqQDClooRCt9oB8Lk0kHMI0HYb1
      E/qyRyKep9usoceyaN6Isa+TioVwbQs9EqZxtEc4t8yoVaNYrXJysE9hYYWIPt2SG/Bm84QB
      ROIZrqxG2L33JaQu4Q3qOCMD1TbJlKuEEov0T31URcLzQfhne4dmo0W/WWNfVSmWK7RODlhK
      Qm0kSMRMxiOffHUVa9yk1RzQGDRYX13gNx87d9ym1nPobG8zToRJImjqMoVsjuGwx0HfQ5l0
      qXeGeO4aru2RXljFd0bstcb89rUku7aE0jjCHtuAoB8N4Y17uCJCNK7RP9jk+KTOeDKhdtoi
      kikT0SOv544HzBVPvpMIn729Axav/YR+bRettIxstumZITKpDAfHh1SKBWQJFBnW15Z48GCT
      xWqesatQqRQJRyLEpDwHrQmXVtJ4qkYyDLqm4kd1JF+QXUg91Qc7nrh8+PEnjLtNrMmAvdMh
      S5fLHBweUyyVWCrHcboGthSiUFnmmy8/48q1KwySeT5ZCNOqtynm83jmkK59zNAPsRyL0Iml
      GHa6ZBNx7JjEaGyRTKeZTMZnxbIC3kre6Figca+JKcfIxKfz0LwIQgh+/89+RXs8XcO3mcIR
      HgWFTRsWFoRCPJ832gBeB0Ew3MsTBMNdMH7/L25x0nOnkn0bw6FnbRDwOnXPnQGYvTa3HmxQ
      WlhHOEPSyTRCglTybAbudeqo4RzRkILZPeX21iHF6jJLpezj72g3jomkK4Re0dUdnPYDN+gF
      Ze4MQLgujn+2KTVNk7bXQQ/pOP0GP/96i3evr1G7v01p+RrVuIIQAl0RfPGrXyLH0kSZUGsP
      qOS73Ln/kJvXb1IftJBsyBTKdI828OMLxKU+PUvlP/nph68seT7gzWPuDAAkItE4IUNnMgDb
      spAUidFgQDSsMnYkbr5/k/aphY9GKhGjXjtGoOE6FpbwiEVCDEdjssUisgNX372J2RxiDfrY
      ko47GVCuFkhIUtAj8i1n7gwglM5wWTdQ9RDZ5GWEsHnw4IBrV29SXfMxdA1ZkYkuxpAlQaWs
      EIpEcW0TSdWRfRfbE4QMjfHYJBwOISsyohiGYp7SQhVF0x+fMgeT/9tN4AV6DkIIGs028cSz
      2zr9EK7roqrTzTOu6z3yAk0lPqPu6WX9s2CgqV8tZ9N9Fgz30rFAAc/m4WELTx5OJTtzq1JZ
      mTolMmiT+nzmzwBck4EjE3+BFq0bd75ES1ZYWSh+/xkRPq4vUBWF4WBALD5bHsAf/cODwAt0
      QZk/A3BGtHoSR9tH5BfXaB1sES8t4/bqOFqCTMin1nO4cmkZI5rGME85bho0jw5YWKwQicax
      Rx16pgrjBodtk3/yyQfnfVUBc8r8GQCA7zCeWAy7DTr9MbXeBqkwHHdOWSqmuHz12uMZ39BV
      TtodRsMuhzUV1TsiW8gwGnSRlBSlbDBzBzybucsJRg2TikUJh3RC0QTRSJjFxSrRSISlxQWK
      2SRbO4cIzmKB6k6U1WKcaDxNpVwhHouTzWbJ5cvI1imu9GLd7gPeTgIv0HMQQvAffnaHiTf9
      hnDamJhZZM9T97eP1PQpka9Pd2AAzyEIhnt5gmC4C8b/8Ic/Y+t0MpXsWWDwdHw7M80if16y
      vCG6584AJq0WA10nrQosZ8RBU0P1Oly6dAkASTLZ2xuwvJzH98+iBn3X5MsvbhGKZ7l2/RKy
      +PVtkCSBEGdLojB77Pd8VkqZlxqT6XiMTOcVX2nAPDB3BgCAEJjtJgNdRQgNz52wtb0LSFxa
      LyIEOIMG//aP/4KlGz/lp2tRMovXGBztcLR9j5Zt4Le22GzBu8sZhoMJ+aUF2vUToqVL5311
      AXPE/HmBZMHmvTu0hjayrKAqMpoRQ0xahBIZQKJ2sMl+rc3K+hWWSlm0WI7OwQNMz0cPx7l2
      eQ1Fi1DJp4hnirxzZQVfgEBGnWFTGXDxeCM2wcL32N7eZWV9nResZvLqdAvBP//f/4rdpvX8
      Dz/9C6ZODJlJ9rx1z8Jr1P3YAEzTZDKZbqN3kRFCMB6PiUajU8nPGo8jy/K5xNS8LbFAb8QK
      cJ4IIfijv/mKgf36/enBOcCPr/uJTXCvecwvPrvN5Xc+YG2hONUgZuVge5NMdZmo8WtfsGfb
      DC2L5DMC24btNnJEZzj2KWSeHbo86DSQo1mi+ovf4J99cxgEw11QnjCAZK7C6vKApbzB//2H
      /yfF9XcIeT1cNU5Sd+iOXArpKL/87BYffvghG3snfHxtkVvbp7y/luNvf/Y573z4Efdvfcn1
      n/5nvHe5+nIjEi6TyYCTWoeY7hMCXENi+8Eu6WKJg90dsrkM9XqHbD5HqZCgOxB4rTpbOxYf
      Xl3jy6++IJYqolhtBn6IcjaJPewSymTpNVpEPZWdoz0K5TIHB8dcuv4Oych0By8BbzbPngY9
      l3RxgVIuRb66TDmXJJLMcWW9iusIltcvk0qnickTRiKE6g7oDByW1i8R0WTKi6tkki//3jxq
      1zhojjg62qPT6dCu1Thsdbl+/SqSa5MolDjd22ZiDjF0hV/8/DbRZBRFDZFOhBgNRuQX11GZ
      MLZVdNei320zcBy27u9hhBQaRzs0+hNG4wmScOn1BrPcw4A3mLnbA5iTIYoexZ4MMUc9mj2H
      paU821uHLC4toBs6kjthY+uQhUqe3ZMuH75zBWs0QgkbDDp9QvE4vmtj9loM/DDVdIiRr+CY
      E+IRA0lR2X74kOLiEif7+6xevUnkGa9EQgh+5/f+NHgFuqDMnQHMG0IIvri7g6SFp5J/W71A
      s5VHf5szwuaQXCpCJDpdVpnreqjqLAYwS07w9LpnkZ09J3gW3W94TrDvefiA77lomvHUP/6z
      ogVH/S5j2yebTX9v9pkluhDg9/6fT4NXoAvK3BmA1e0y0DSG9SPypQX6wwnZdAJD17Bdl367
      RbM3ppxLIBkJZHfMyIFSPsPh8SGqkLCRkG2TbDbDaDym1e2xWCoyHvVQI0mG3S7pXI5u85Rk
      rkQ46A3w1jJ3BgAeG3fvY04cFFnizu07XP7ot5BsE2QJIXRkt8/Pfr5BPF8lFRb4kk4pn8Ge
      jBh4GlFvm92DOkulMpNIhpDZ5O7IphDysAZ9PF9ieGCyv7vLzY9ShPXpTnkD3nzmzgBkLcQ7
      733IpNPENk3K5QLJdJHtb77g/feucPfeNvFUinLRI5rLkohoj4PA85VlSsUS/eYxQ1Mik0lj
      lBaxuwauOQbJIBo2iMVi9LoTsqkojh2EOb/NvBFeoEm/xcAzKKRjr123EIL/7Y9+xulwuv4A
      Qvgv3LHwabrPtjLTVlmeRfeM44YZqkNPrxshzhJqXjYlMgiGezrnGQw3ayxQEAz3fN6IFeA8
      mTUneJYyf7OeA5xvaUSmNt7XqXvu9gAXjWlnMpj+AXoVumeRnaWpx+vWHRjAj8wsD8OsD9J5
      6X6Txq387u/+7u9Ore0toXd6wO37mwg1SjL2/JCIu7c+pdYZ44273Ln3ACMa5vatr7ExSCee
      vZdonx6zfdggprl8ees2rmKwe/8bTvsm484xD7cPyZZKqE85YfXsEbc+v0OqWuLuZ7+gPfSY
      dGvcfbBNNKxw6/Yd0OMkok9pKCh8th58w9ZODd8dcvf+FoaucPfONziSwf6DbzjpTijls0/K
      Ap3TQ+7e3cBH5u6dr/DVEIdb9zk87eGO2ty7v0WqXEV/yriFPeKrr7+h1Z/Qqe2yc9RCdgfc
      ubeJYajcuXMHSzz7vnUbx9y9fw8Hg/tff4Yrh6jtPWTvpI2w+ty9u0GiUMZQn76aBgmyL0C7
      OeD9Tz7EGvZf6POO4yBJEmMbfvrTK+x8tcPVj3+KP/nhqNNMoULMkBkMBlz/4BOc9iax8nXC
      mocvR7m6mqPXt58qq+hRFgppBC6OfdZl0ULjk6s5vtzu8/HHHzAZ9p6hWaK6uEw6k2TiSvzk
      2hI7x6fceO9jnNEe0fQ6Uf3ZM2sqVyafS6NrAt9TkL0JRnqRbFxl6Kh8/O4Cp82nO1gkPUoy
      rCIJDyWWZTljcDKEn95c5v7eKe+8/xM881njhlQqhe+5SIqH6ypIwkKNlyhnDFoj+OSDFU6b
      46fK+s4kMIAXIRZTuXPrLmjGC3zaI5XKM+x38F2Tb249JL+W5+Gtr3HlHy7T2D49ZndvD8sV
      PLx7Cz9conv0gMHYxZn02NqtE4k+PaTDtYZs7+1xfNQgnc/S77RwzRFfbZyyXtC4dfse8jPG
      L/D56ssv8HyB5Jrc3jwgn4yyce8bfCVLt7FFb/TsnOid+7dpDU0kZNLZJM3ukGFjn0Z3guKN
      uX33gGTy6a1snXEfW2hMJhPGnQb7jSEJxeLW/X2q2Sj37935wfKW7U6XSCTKsNMnXUjT6vQZ
      t485aQ4Jyxa3vtkl8Qzd1mQUeIGehxCCbrdLOBxGN4wXiHAUOLaNj4yuypi2S8jQsS0TTQ/9
      YICYY1s4roduGLiOg24YeI4NsooiCRxXYBhPNwDhe0xMC1lRkfFBVlFlsN2zrjqWaaGHnj5+
      IQSWOcFHIqTr2I6LYehYloluhB6PQXtGgJrr2NiOi6breI6Dqhvgu/jIqIqE7XiEjKc/xEL4
      mKaJqhlIwsNHRlMkLPv7Y3jWffdcB8t2CYVC2Jb5Pd3f/Z5n7Q0CA3gOs7pBA+ab4BUo4K0m
      MICAt5rAAALeagIDCHirCQwg4K0mMICAt5rAAALeagIDCHir+f8BDJTz5sgpSg4AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Product - Profit' width='192'>
      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
      H6LtfXPgOXPJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Products' width='192'>
      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
      2v8DfX05/JE1tvQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales - Profit by States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='States-Sales' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
